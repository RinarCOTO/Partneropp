---
interface Props {
  href?: string;
  label: string;
  variant?: "primary" | "secondary";
}

const {
  href = "#",
  label,
  variant = "primary",
} = Astro.props;

const baseClasses =
  "flex items-center justify-center rounded-4xl text-[17.5px] uppercase transition  duration-200";
---

<a href={href} class="inline-block">
  {variant === "primary" ? (
    <button class={`${baseClasses} bg-primary font-dmsans font-[7pp] text-white md:gap-[15px] md:py-[10px] md:pr-[20px] md:pl-[15px] hover:bg-primary/90`}>
      <span>{label}</span>
              <svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="md:w-[14px] md:h-[14px]">
          <path d="M1.9 13.5L0.5 12.1L10.1 2.5L1.5 2.5V0.5L13.5 0.5V12.5H11.5V3.9L1.9 13.5Z" />
        </svg>
    </button>
  ) : (
    <button class="relative group bg-accent md:p-[10px] rounded-4xl cursor-pointer">
      <div class="flex justify-center items-center border rounded-4xl md:py-[10px] md:px-[43.5px] md:gap-[15px] bg-white font-roboto text-black font-[700] text-[18px] leading-[24px] uppercase hover:bg-[#1E1F33] hover:border-[#1E1F33] hover:text-white">
       <span>{label}</span>
        <svg width="14" height="14" viewBox="0 0 14 14" fill="currentColor" xmlns="http://www.w3.org/2000/svg" class="md:w-[14px] md:h-[14px]">
          <path d="M1.9 13.5L0.5 12.1L10.1 2.5L1.5 2.5V0.5L13.5 0.5V12.5H11.5V3.9L1.9 13.5Z" />
        </svg>

      </div>
    </button>
  )}
</a>
